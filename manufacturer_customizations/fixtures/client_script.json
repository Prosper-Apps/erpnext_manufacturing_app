[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2021-12-29 13:55:57.107703",
  "name": "Sales Invoice-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Sales Invoice', {\n\tvalidate: (frm) => {\n\t\tif(frm.doc.items){\n\t\t    for(var i=0;i<frm.doc.items.length;i++){\n\t             if(frm.doc.items[i].amount!=frm.doc.items[i].customer_po_amount){\n\t                frappe.throw(\"Customer PO amount doesn't match with Quotation Amount\")\n\t           }   \n\t\t    }\n\t\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Asset",
  "enabled": 0,
  "modified": "2021-12-28 15:58:08.230942",
  "name": "Asset-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Asset', {\n\trefresh(frm) {\n\t\tfrm.fields_dict['spares_'].grid.get_field('stock_items').get_query = function() {\n            return {\n                filters: {\n                   is_stock_item:1\n                }\n            };\n        };\n\t},\n\tonload:function(frm){\n        frm.fields_dict['spares_'].grid.get_field('stock_items').get_query = function() {\n            return {\n                filters: {\n                   is_stock_item:1\n                }\n            };\n        };\n    },\n})\n\nfrappe.ui.form.on('Spares Item', {\n    stock_items:function(frm,cdt,cdn){\n        var local=locals[cdt][cdn];\n        console.log(local)\n        if(local.stock_items){\n            var bin=frappe.db.get_list('Bin',{'item_code':local.stock_items},'actual_qty')\n            console.log(bin)\n            // frappe.call({\n            //     type: 'POST',\n            //     url: \"/api/method/calculate_item_balance_qty_in_asset\",\n            //     args:{\n            //     'item_code': local.stock_items\n            //     },\n            //     callback: function(r){\n            //         console.log(r)\n            //     }\n            // })\n        }\n    }\n    \n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 0,
  "modified": "2022-06-08 14:08:21.191621",
  "name": "Opportunity-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Opportunity', {\n\twith_items: function(frm){\n\t    if(frm.doc.opportunity_from == 'Customer'){\n\t        set_query(frm);\n\t    }\n\t},\n\tparty_name: function(frm){\n\t    if(frm.doc.opportunity_from == 'Customer' && frm.doc.party_name != undefined || frm.doc.party_name != ''){\n\t        set_query(frm);\n\t    }\n\t}\n})\n\n\nfunction set_query(frm){\n    frappe.call({\n        method:'pcprocess_customizations.pcprocess_customizations.utils.qc_query',\n        args: {\n            'filters': {'customer': frm.doc.party_name, 'docstatus': 1}\n        },\n        async: false,\n        callback: function(r){\n            frm.set_query(\"item_code\", \"items\", function() {\n        \t\treturn {\n        \t\t\tfilters: {'item_code': ['in', r.message]}\n        \t\t};\n        \t});\n        }\n    })\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 0,
  "modified": "2022-06-07 18:00:06.148191",
  "name": "Sales Order-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Sales Order', {\n\tbefore_workflow_action: async(frm) => {\n\t\tif(frm.selected_workflow_action == \"Approve\"){\n\t\t\tif(frm.doc.items){\n    \t\t    for(var i=0;i<frm.doc.items.length;i++){\n    \t\t        if(frm.doc.items[i].customer_po_amount>0){\n    \t\t             if(frm.doc.items[i].amount!=frm.doc.items[i].customer_po_amount){\n    \t\t                frappe.throw(\"Customer PO amount doesn't match with Quotation Amount\")\n    \t\t            }   \n    \t\t        }\n    \t\t    }\n    \t\t}\n\t\t}\n\t},\n    before_save(frm, cdt, cdn){\n        set_delivery_mode(frm, cdt, cdn);\n    },\n    refresh(frm){\n        let allow_delivery = false;\n        allow_delivery = frm.doc.items.some(item => item.delivered_by_supplier === 0 && item.qty > flt(item.delivered_qty)) && !frm.doc.skip_delivery_note\n        const order_is_a_sale = [\"Sales\", \"Shopping Cart\"].indexOf(frm.doc.order_type) !== -1;\n        const order_is_a_custom_sale = [\"Sales\", \"Shopping Cart\", \"Maintenance\"].indexOf(frm.doc.order_type) === -1;\n        setTimeout(() => {\n        frm.remove_custom_button('Work Order', 'Create');\n        if (frm.doc.docstatus==1) {\n            if(frm.doc.status !== 'Closed') {\n    \t\t\tif(frm.doc.status !== 'On Hold') {\n                    if(flt(frm.doc.per_delivered, 6) < 100 && (order_is_a_sale || order_is_a_custom_sale) && allow_delivery) {\n                        frm.add_custom_button('Work Order', () => {\n                            make_work_order(frm);\n                        }, 'Create');\n                    }\n        \n    \t        }\n            }\n        }\n        \n        }, 10);\n        \n    }\n})\n\nfrappe.ui.form.on('Sales Order Item', {\n\t// item_code: function(frm, cdt, cdn){\n    //     set_delivery_mode(frm, cdt, cdn);\n    //     get_item_based_delivery_mode(frm, cdt, cdn);\n    // }\n})\n\n\nfunction set_delivery_mode(frm, cdt, cdn){\n    if(frm.doc.items.length == 1 && frm.doc.items[0].prevdoc_docname != undefined ){\n        frappe.call({\n            method: 'pcprocess_customizations.pcprocess_customizations.doctype.sales_order.sales_order.get_delivery_mode',\n            args: {\n                'record': frm.doc.items[0].prevdoc_docname,\n                'item_code': frm.doc.items[0].item_code\n            },\n            async: false,\n            callback: function(r){\n                frm.set_value('delivery_mode', r.message);\n                frm.refresh_field('delivery_mode');\n            }\n        })\n    }\n}\n\nfunction get_item_based_delivery_mode(frm, cdt, cdn){\n    var row = locals[cdt][cdn];\n    frappe.call({\n        method: 'pcprocess_customizations.pcprocess_customizations.doctype.quotation.quotation.get_item_delivery_mode',\n        args:{\n            'item_name': row.item_code,\n            'quotation_name': row.prevdoc_docname\n        },\n        async:false,\n        callback: function(r){\n            console.log(r);\n        }\n    })\n}\n\n\nfunction make_work_order(frm) {\n\t\t//var me = this;\n\t\tfrm.call({\n\t\t\tdoc: frm.doc,\n\t\t\tmethod: 'get_work_order_items',\n\t\t\tcallback: function(r) {\n\t\t\t\tif(!r.message) {\n\t\t\t\t\tfrappe.msgprint({\n\t\t\t\t\t\ttitle: __('Work Order not created'),\n\t\t\t\t\t\tmessage: __('No Items with Bill of Materials to Manufacture'),\n\t\t\t\t\t\tindicator: 'orange'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if(!r.message) {\n\t\t\t\t\tfrappe.msgprint({\n\t\t\t\t\t\ttitle: __('Work Order not created'),\n\t\t\t\t\t\tmessage: __('Work Order already created for all items with BOM'),\n\t\t\t\t\t\tindicator: 'orange'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tconst fields = [{\n\t\t\t\t\t\tlabel: 'Items',\n\t\t\t\t\t\tfieldtype: 'Table',\n\t\t\t\t\t\tfieldname: 'items',\n\t\t\t\t\t\tdescription: __('Select BOM and Qty for Production'),\n\t\t\t\t\t\tfields: [{\n\t\t\t\t\t\t\tfieldtype: 'Read Only',\n\t\t\t\t\t\t\tfieldname: 'item_code',\n\t\t\t\t\t\t\tlabel: __('Item Code'),\n\t\t\t\t\t\t\tin_list_view: 1\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tfieldtype: 'Link',\n\t\t\t\t\t\t\tfieldname: 'bom',\n\t\t\t\t\t\t\toptions: 'BOM',\n\t\t\t\t\t\t\treqd: 1,\n\t\t\t\t\t\t\tlabel: __('Select BOM'),\n\t\t\t\t\t\t\tin_list_view: 1,\n\t\t\t\t\t\t\tget_query: function (doc) {\n\t\t\t\t\t\t\t\treturn { filters: { item: doc.item_code } };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tfieldtype: 'Float',\n\t\t\t\t\t\t\tfieldname: 'pending_qty',\n\t\t\t\t\t\t\treqd: 1,\n\t\t\t\t\t\t\tlabel: __('Qty'),\n\t\t\t\t\t\t\tin_list_view: 1\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tfieldtype: 'Data',\n\t\t\t\t\t\t\tfieldname: 'sales_order_item',\n\t\t\t\t\t\t\treqd: 1,\n\t\t\t\t\t\t\tlabel: __('Sales Order Item'),\n\t\t\t\t\t\t\thidden: 1\n\t\t\t\t\t\t}],\n\t\t\t\t\t\tdata: r.message,\n\t\t\t\t\t\tget_data: () => {\n\t\t\t\t\t\t\treturn r.message\n\t\t\t\t\t\t}\n\t\t\t\t\t}]\n\t\t\t\t\tvar d = new frappe.ui.Dialog({\n\t\t\t\t\t\ttitle: __('Select Items to Manufacture'),\n\t\t\t\t\t\tfields: fields,\n\t\t\t\t\t\tprimary_action: function() {\n\t\t\t\t\t\t\tvar data = {items: d.fields_dict.items.grid.get_selected_children()};\n\t\t\t\t\t\t\tfrm.call({\n\t\t\t\t\t\t\t\tmethod: 'make_work_orders',\n\t\t\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t\t\titems: data,\n\t\t\t\t\t\t\t\t\tcompany: frm.doc.company,\n\t\t\t\t\t\t\t\t\tsales_order: frm.docname,\n\t\t\t\t\t\t\t\t\tproject: frm.project\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfreeze: true,\n\t\t\t\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\t\t\t\tif(r.message) {\n\t\t\t\t\t\t\t\t\tvar wo_name = 'Work Orders Created: '\n\t\t\t\t\t\t\t\t\tfor (var i=0; i<r.message.length; i++){\n\t\t\t\t\t\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\t\t\t\t\tmethod:'pcprocess_customizations.pcprocess_customizations.doctype.work_order.work_order.update_name',\n\t\t\t\t\t\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t\t\t\t\t\t'doc_name': r.message[i]\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tasync:false,\n\t\t\t\t\t\t\t\t\t\t\tcallback:function(re){\n\t\t\t\t\t\t\t\t\t\t\t\two_name = wo_name.concat('<a href=\"/app/work-order/',re.message,'\">',re.message,'</a>, ')\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tfrappe.msgprint({\n\t\t\t\t\t\t\t\t\t\t\tmessage: __(wo_name),\n\t\t\t\t\t\t\t\t\t\t\tindicator: 'green'\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\td.hide();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tprimary_action_label: __('Create')\n\t\t\t\t\t});\n\t\t\t\t\td.show();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Job Card",
  "enabled": 1,
  "modified": "2022-07-04 14:32:20.426150",
  "name": "Job Card-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Job Card', {\n\trefresh(frm) {\n\t\tif(frm.doc.docstatus <2){\n    \t\tadd_quality_inspection(frm);\n\t\t}\n\t},\n\tbefore_submit:function(frm){\n\t    frappe.db.get_list('Quality Inspection', {\n\tfilters: {\n\t\treference_name: frm.doc.name,\n        reference_type: \"Job Card\",\n\t},\n\tfields: ['count(name) as count'],\n}).then(res => {\n\tconsole.log(res[0].count)\n\tif(res[0].count === 0){\n\t    frappe.validated=false;\n\t   frappe.msgprint(\"Quality inspection is required\");\n\t}\n});\n\n\t    $.each(frm.doc.time_logs,function(idx, row){\n\t        if(row.accepted_qty>row.completed_qty){\n\t            frappe.validate=false;\n    \t\t    frappe.throw(__(\"Time Logs <br> Row:{0} Accepted Qty should not be greater than Completed Qty.\", [idx+1]));\n\t        }\n\t        });\n\t}\n\t\n})\n\n\n\nfunction add_quality_inspection(frm){\n\tfrm.add_custom_button(__('Quality Inspection'), () => {\n\t\tfrappe.call({\n\t\t\tmethod: 'manufacturer_customizations.manufacturer_customizations.doctype.job_card.job_card.make_quality_inspection',\n\t\t\targs: {\n\t\t\t\t'doc': frm.doc\n\t\t\t},\n\t\t\tasync: false,\n\t\t\tcallback: function(r){\n\t\t\t    if(r.message)\n\t\t\t\tfrappe.set_route(\"Form\", \"Quality Inspection\", r.message);\n\t\t\t}\n\t\t})\n\t}, __('Make'));\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Work Order",
  "enabled": 1,
  "modified": "2022-07-04 14:33:59.152908",
  "name": "Work Order-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Work Order Item', {\n    length: function(frm,cdt,cdn){\n        var d = locals[cdt][cdn];\n        d.product = d.length*d.breadth\n        refresh_field(\"required_items\");\n        \n    },\n    \n    breadth: function(frm,cdt,cdn){\n        var d = locals[cdt][cdn];\n        d.product = d.length*d.breadth\n        refresh_field(\"required_items\");\n        \n    }\n})\n\nfrappe.ui.form.on('Work Order', {\n\trefresh(frm) {\n\t    if(frm.doc.status==\"Not Started\")\n\t\t\n\t\t\n\t\tfrm.add_custom_button(__('Quality Inspection'), function(){\n\t\t    frappe.new_doc('Quality Inspection',true)\n\t\t    frappe.route_options = {\n                reference_doctype: \"Quality Inspection\",\n                reference_type: \"Work Order\",\n                reference_name: frm.doc.name,\n                item_code: frm.doc.production_item\n            }\n\t\t    frappe.msgprint(frm.doc.QualityInspection);\n\t\t})\n}\n})\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "BOM",
  "enabled": 1,
  "modified": "2022-06-27 15:49:57.388098",
  "name": "BOM-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('BOM', {\n\trefresh(frm) {\n\t\tfrm.set_query(\"item_code\", \"items\", function(doc, cdt, cdn) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\titem_group:\"Raw Material (BOM)\"\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\tif(frm.doc.inspection_required==1){\n\t\t    alert('test')\n\t}\n\t},\n\tonload(frm){\n\t    frm.set_query(\"item_code\", \"items\", function(doc, cdt, cdn) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\titem_group:\"Raw Material (BOM)\"\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n\t\n})\n\nfrappe.ui.form.on('BOM Item', {\n\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2022-03-11 11:41:33.005347",
  "name": "Lead-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Lead', {\n\tonload(frm) {\n\t    if(!frm.doc.posting_date_and_time){\n\t        frm.set_value('posting_date_and_time',frappe.datetime.now_datetime())   \n\t    }\n\t},\n\tphone_no(frm){\n\t    if(frm.doc.phone_no){\n\t        frm.set_value('phone',frm.doc.phone_no) \n\t    }\n\t},\n\tmobile(frm){\n\t    if(frm.doc.mobile){\n\t        frm.set_value('mobile_no',frm.doc.mobile)    \n\t    }\n\t},\n\tfax_no(frm){\n\t    if(frm.doc.fax_no){\n\t        frm.set_value('fax',frm.doc.fax_no)    \n\t    }   \n\t},\n\twedsite_name(frm){\n\t    if(frm.doc.wedsite_name){\n\t        frm.set_value('website',frm.doc.wedsite_name)    \n\t    }   \n\t},\n\torg_company_name(frm){\n\t    if(frm.doc.org_company_name){\n\t        frm.set_value('company',frm.doc.org_company_name)  \n\t    }\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2022-05-06 14:32:26.748863",
  "name": "Quotation-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Quotation', {\n    fetch_pcb_amount: function (frm) {\n        fetch_pcb_price(frm)\n        update_normal_pcb_rate(frm)\n    },\n\n    customer_name: function (frm) {\n        if (frm.doc.party_name !== undefined) {\n            reset_items_list(frm);\n            set_query(frm);\n        }\n    },\n\tonload: function(frm){\n\t\tif (frm.doc.party_name !== undefined && frm.doc.__islocal) {\n            reset_items_list(frm);\n            set_query(frm);\n        }\n\t}\n})\n\nfrappe.ui.form.on('Quotation Item', {\n    item_code: function (frm, cdt, cdn) {\n        set_delivery_modes(frm, cdt, cdn);\n    },\n    qty: function(frm, cdt, cdn){\n        // fetch_pcb_price(frm);\n    },\n    items_add: function(frm, cdt, cdn){\n        if (frm.doc.party_name !== undefined) {\n            // reset_items_list(frm);\n            set_query(frm);\n        }\n    },\n    delivery_mode:function(frm,cdt,cdn){\n        var doc_row = locals[cdt][cdn];\n        if (doc_row.delivery_mode!=\"\"){\n            frappe.call({\n                method:'pcprocess_customizations.pcprocess_customizations.doctype.quotation.quotation.get_lead_time',\n                args: {\n                    'doc_row': doc_row,\n                    'customer': frm.doc.customer_name\n                },\n                callback:function(r){\n                    console.log(r)\n                    for(var i=0;i<r.message.length; i++ ){\n                        if (doc_row.delivery_mode == r.message[i].delivery_type){\n                            doc_row.lead_time = r.message[i].delivery_mode_lead_time;\n                            refresh_field(\"items\");\n                        }\n                        if (r.message[i].delivery_type == 'Economy 1'){\n                            doc_row.economy_lead_time = r.message[i].delivery_mode_lead_time;\n                            refresh_field(\"items\");\n                        }\n                        if (r.message[i].delivery_type == 'Economy 2'){\n                            doc_row.economy_2_lead_time = r.message[i].delivery_mode_lead_time;\n                            refresh_field(\"items\");\n                        }\n                        if (r.message[i].delivery_type == 'Lightning'){\n                            doc_row.lightning_lead_time = r.message[i].delivery_mode_lead_time;\n                            refresh_field(\"items\");\n                        }\n                        if (r.message[i].delivery_type == 'Superfast'){\n                            doc_row.superfast_lead_time = r.message[i].delivery_mode_lead_time;\n                            refresh_field(\"items\");\n                        }\n                        if (r.message[i].delivery_type == 'Normal'){\n                            doc_row.normal_lead_time = r.message[i].delivery_mode_lead_time;\n                            refresh_field(\"items\");\n                        }\n                        if (r.message[i].delivery_type == 'Express'){\n                            doc_row.express_lead_time = r.message[i].delivery_mode_lead_time;\n                            refresh_field(\"items\");\n                        }\n                    }\n                }\n            })\n        }\n    }\n})\n\nfunction reset_items_list(frm){\n   frm.doc.items = []\n   frm.refresh_field('items')\n}\n\nfunction set_delivery_modes(frm, cdt, cdn) {\n    if(frm.doc.customer_name !== undefined){\n        var row = locals[cdt][cdn];\n        if (row.item_code !== undefined) {\n            frappe.call({\n                method: 'pcprocess_customizations.pcprocess_customizations.doctype.quotation.quotation.get_delivery_modes',\n                args: {\n                    'data': row,\n                    'customer': frm.doc.customer_name\n                },\n                callback: function (r) {\n                    var apps = frm.get_field(\"items\");\n                    var grid_row = apps.grid.get_grid_row(cdn);\n                    var docfield = grid_row.docfields;\n                    for (var i = 0; i < docfield.length; i++) {\n                        if (docfield[i].fieldname == \"delivery_mode\") {\n                            docfield[i].options = r.message;\n                        }\n                    }\n                    grid_row.refresh();\n                }\n            })\n        }\n    }\n}\n\nfunction set_query(frm) {\n    frappe.call({\n        method: 'pcprocess_customizations.pcprocess_customizations.utils.qc_query',\n        args: {\n            'customer': frm.doc.customer_name,\n            'party_name': frm.doc.party_name,\n            'item_group': 'Finished PCB',\n            'quotation_to': frm.doc.quotation_to\n        },\n        async: true,\n        callback: function (r) {\n            frm.set_query(\"item_code\", \"items\", function () {\n                return {\n                    filters: { 'item_code': ['in', r.message], 'item_group': 'Finished PCB'}\n                };\n            });\n        }\n    })\n    frm.refresh_field('items');\n}\n\nfunction fetch_pcb_price(frm){\n    frappe.call({\n        method: 'pcprocess_customizations.pcprocess_customizations.doctype.quotation.quotation.get_pcb_cost',\n        args: {\n            'doc': frm.doc,\n        },\n        callback: function (r) {\n            var doc = frm.doc;\n            if (r.message) {\n                for (var i = 0; i < doc.items.length; i++) {\n                    var k = doc.items[i].item_code + '_' + String(doc.items[i].qty)\n                    var cont = r.message[k]\n                    // frappe.model.set_value(doc.items[i].doctype, doc.items[i].name, 'amount', cont['final_price_without_gst']);\n                    frappe.model.set_value(doc.items[i].doctype, doc.items[i].name, 'rate', cont['Price of 1 PCB']);\n                    frm.refresh_field('items');\n                }\n            }\n        }\n    })\n}\n\nfunction update_normal_pcb_rate(frm){\n    frappe.call({\n        method: 'pcprocess_customizations.pcprocess_customizations.doctype.quotation.quotation.get_pcb_cost_for_normal',\n        args: {\n            'doc': frm.doc,\n        },\n        callback: function (r) {\n            var doc = frm.doc;\n            if (r.message) {\n                for (var i = 0; i < doc.items.length; i++) {\n                    var k = doc.items[i].item_code + '_' + String(doc.items[i].qty)\n                    var cont = r.message[k]\n                    frappe.model.set_value(doc.items[i].doctype, doc.items[i].name, 'normal_pcb_rate', cont['Price of 1 PCB']);\n                    frm.refresh_field('items');\n                }\n            }\n        }\n    })\n}\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quality Inspection",
  "enabled": 1,
  "modified": "2022-07-04 14:35:15.771409",
  "name": "Quality Inspection-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Quality Inspection', {\n\tset_default(frm) {\n\t    if(frm.doc.set_default == 1){\n\t        $.each(frm.doc.readings,function(idx, item){\n\t            if(item.specification == 'Hole Profile'){\n\t                item.mesured_observed = 'Hole profiles are good'\n\t            }\n\t            else if(item.specification == 'Bow, Twist & Wrap'){\n\t                item.mesured_observed = 'Within acceptable limit'\n\t            }\n\t            else if(item.specification == 'Solder Mask - Hardness'){\n\t                item.mesured_observed = 'Passed'\n\t            }\n\t            else if(item.specification == 'Min Trace width / space'){\n\t                item.mesured_observed = 'Measured and Found Ok'\n\t            }\n\t            else if(item.specification == 'Solderability HASL/ENiG/Hard Gold'){\n\t                item.mesured_observed = 'Good'\n\t            }\n\t            else if(item.specification == 'General Aesthatic'){\n\t                item.mesured_observed = 'Free from scratches and dust'\n\t            }\n\t            else if(item.specification == 'Electrical Test'){\n\t                item.mesured_observed = 'Passed'\n\t            }\n\t        });\n\t        refresh_field(\"readings\");\n\t    }\n\t   \n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2022-05-06 14:31:07.080078",
  "name": "Item-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Item', {\n\trefresh(frm,cdt,cdn) {\n\t\tmanufacturing_uom_filter(frm,cdt,cdn);\n\t}\n})\n\nfrappe.ui.form.on('UOM Conversion Detail', {\n\tuom(frm,cdt,cdn) {\n\t\tmanufacturing_uom_filter(frm,cdt,cdn);\n\t},\n\tuoms_remove(frm,cdt,cdn) {\n\t\tmanufacturing_uom_filter(frm,cdt,cdn);\n\t}\n})\nfunction manufacturing_uom_filter(frm,cdt,cdn){\n    var uoms_list = [];\n    $.each(frm.doc.uoms, function(idx, item){\n        uoms_list.push(item.uom)\n    })\n    frm.set_query(\"manufacturing_uom\", function(frm, cdt, cdn) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t    name: ['in',uoms_list]\n\t\t\t\t}\n\t\t\t};\n\t\t});\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2022-05-06 05:59:30.254499",
  "name": "Stock Entry-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Stock Entry', {\n\trefresh(frm) {\n\t\tif(frm.doc.docstatus==1){\n\t\t    frm.add_custom_button(__(\"Stock Ledger in Mfg UOM\"), function() {\n\t\t\t\tfrappe.route_options = {\n\t\t\t\t\tvoucher_no: frm.doc.name,\n\t\t\t\t\tfrom_date: frm.doc.posting_date,\n\t\t\t\t\tto_date: moment(frm.doc.modified).format('YYYY-MM-DD'),\n\t\t\t\t\tcompany: frm.doc.company,\n\t\t\t\t\tshow_cancelled_entries: frm.doc.docstatus === 2\n\t\t\t\t};\n\t\t\t\tfrappe.set_route(\"query-report\", \"Stock Ledger in Mfg UOM\");\n\t\t\t}, __(\"View\"));\n\t\t}\n\t}\n})",
  "view": "Form"
 }
]